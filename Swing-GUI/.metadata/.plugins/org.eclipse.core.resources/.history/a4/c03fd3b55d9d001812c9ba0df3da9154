package com.swabhav.framedemo;

import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;

import com.tic.tac.toe.Game;
import com.tic.tac.toe.GameStatus;
import com.tic.tac.toe.Mark;
import com.tic.tac.toe.Player;
import com.tic.tac.toe.ResultAnalyser;
import com.tic.tac.toe.ThreeByThreeBoard;

public class TicTacToeFrame extends JFrame {
	JButton[] buttons = new JButton[9];
	ButtonHandler handler;
	private Mark currentMark;
	ThreeByThreeBoard board;
	Player[] players;
	ResultAnalyser analyser;
	Game game = null;
	GameStatus status;
	
	private Icon xIcon = new ImageIcon("/home/manu/Desktop/Swabhav/Swing-GUI/Frame Map/src/com/swabhav/framedemo/x2.jpg");
	private Icon oIcon = new ImageIcon("/home/manu/Desktop/Swabhav/Swing-GUI/Frame Map/src/com/swabhav/framedemo/O.jpg");
	
	public TicTacToeFrame(String title) {
		setLayout(new GridLayout(3, 3));
		setTitle(title);
		setSize(768, 512);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		new TicTacToeButtonHandler();
		createButtons(this);
		setVisible(true);
	}

	public void createButtons(Container container) {
		for (int i = 0; i < 9; i++) {
			buttons[i] = new JButton();
			buttons[i].setText(i+"");
			container.add(buttons[i]);
			buttons[i].addActionListener(new ButtonHandler(i));
		}
	}
	
	private class ButtonHandler implements ActionListener{
		int i;
		public ButtonHandler(int i) {
			this.i = i;
		}
		@Override
		public void actionPerformed(ActionEvent e) {
			String source = e.getActionCommand();
			int position = Integer.parseInt(source);
			if(e.getSource() == i+"") {
				if(currentMark == Mark.O) {
					buttons[Integer.parseInt(i+"")].setIcon(oIcon);
				}	
				else {
					buttons[Integer.parseInt(i+"")].setIcon(xIcon);
				}
			}
			
			System.out.println("before"+currentMark+"\tStatus: "+status);
			callPlay(position);
			setDetails();
			System.out.println("after"+currentMark+"\tStatus: "+status);
			checkStatus();
			
		}
		
	}
	
	public void callPlay(int position) {
		System.out.println(game == null);
		game.play(position);
	}
	
	public void setDetails() {
		this.currentMark = game.getCurrentPlayer().getMark();
		this.status = game.getGameStatus();
	}
	public void checkStatus() {
		
	}

}
